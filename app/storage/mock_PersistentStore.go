// Code generated by mockery v1.0.0. DO NOT EDIT.

package storage

import mock "github.com/stretchr/testify/mock"
import time "time"

// MockPersistentStore is an autogenerated mock type for the PersistentStore type
type MockPersistentStore struct {
	mock.Mock
}

// Get provides a mock function with given fields: agr, bucketName, from, to
func (_m *MockPersistentStore) Get(agr StatAggregation, bucketName string, from time.Time, to time.Time) ([]StatAggregation, error) {
	ret := _m.Called(agr, bucketName, from, to)

	var r0 []StatAggregation
	if rf, ok := ret.Get(0).(func(StatAggregation, string, time.Time, time.Time) []StatAggregation); ok {
		r0 = rf(agr, bucketName, from, to)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]StatAggregation)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(StatAggregation, string, time.Time, time.Time) error); ok {
		r1 = rf(agr, bucketName, from, to)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: agr, currentTime
func (_m *MockPersistentStore) Save(agr StatAggregation, currentTime time.Time) error {
	ret := _m.Called(agr, currentTime)

	var r0 error
	if rf, ok := ret.Get(0).(func(StatAggregation, time.Time) error); ok {
		r0 = rf(agr, currentTime)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
